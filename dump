#!/bin/sh

# set our defaults
DUMP_DEBUG_FLAG=${DUMP_DEBUG:-false}
BAK_SCHEDULE=${SCHEDULE:-daily}
BAK_DB_USER=${MYSQL_USER:-root}
BAK_DB_PASS=${MYSQL_PASSWORD:-$(cat /run/secrets/${MYSQL_PASSWORD_FILE:-none})}
BAK_DB_HOST=${MYSQL_HOST:-db}
BAK_DB_PORT=${MYSQL_PORT:-3306}
BAK_DATABASES=${MYSQL_DATABASE:--A}
RESERVE_NUM=${RESERVES:-7}
BAK_GROUP=root
# database server
DUMP_TARGET=/backups

# debug info
if [ $DUMP_DEBUG_FLAG = 'true' ]; then
  BAK_OPTIONS="--debug-info --verbose $OPTIONS"
  CMD="set -x;"
else
  BAK_OPTIONS=${OPTIONS}
  CMD=""
fi

# command
now=$(date +"%Y%m%d%H%M%S")
TARGET=db_backup_${now}

# encrypt
if [ $ENCRYPT_KEY ]; then
  TARGET="${TARGET}.gz.aes"
  OUT_CMD="gzip | openssl aes-256-cbc -k $ENCRYPT_KEY > $DUMP_TARGET/${TARGET}"
else
  TARGET="${TARGET}.gz"
  OUT_CMD="gzip > $DUMP_TARGET/${TARGET}"
fi

CMD="$CMD set -o pipefail; mysqldump -h $BAK_DB_HOST -P $BAK_DB_PORT -u$BAK_DB_USER -p$BAK_DB_PASS $BAK_DATABASES $BAK_OPTIONS | $OUT_CMD"

# exec command
start=$(date +"%Y-%m-%d %H:%M:%S")
echo "$start: start database dump..."
/bin/sh -c "$CMD"

RET=$?
end=$(date +"%Y-%m-%d %H:%M:%S")

# check result and cleanup old file
if [ $RET -ne 0 ]; then
  echo "$end: backup error: exit code $RET"
  rm $DUMP_TARGET/$TARGET
  exit $RET
else
  echo "$end: backup successful."
  cd $DUMP_TARGET && ls -lrt | head -n -$RESERVE_NUM | awk '{print $9}' | xargs rm -f

  if [ $BAK_GROUP -ne "root" ]; then
    chgrp $BAK_GROUP $DUMP_TARGET/$TARGET
  fi

  exit 0
fi
